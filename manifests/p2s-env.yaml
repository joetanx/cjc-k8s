apiVersion: v1
kind: ServiceAccount
metadata:
  name: p2s-env
  namespace: app-cjc
---
apiVersion: v1
kind: Service
metadata:
  name: p2s-env
  namespace: app-cjc
spec:
  clusterIP: None
  selector:
    app: p2s-env
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: p2s-env
  namespace: app-cjc
  annotations:
    cert-manager.io/cluster-issuer: ca-issuer
spec:
  ingressClassName: nginx
  rules:
  - host: p2s-env.cjc.cityapp.vx
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: p2s-env
            port:
              number: 8080
  tls:
  - hosts:
    - p2s-env.cjc.cityapp.vx
    secretName: p2s-env-cert
---
apiVersion: v1
kind: Secret
# https://docs.cyberark.com/AAM-DAP/Latest/en/Content/Integrations/k8s-ocp/cjr-k8s-jwt-sp-ic.htm
metadata:
  name: p2s-env-secret
  namespace: app-cjc
type: Opaque
stringData:
  conjur-map: |-
    address: data/jtan/db_cityapp/address
    username: data/jtan/db_cityapp/username
    password: data/jtan/db_cityapp/password
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: p2s-env-secrets-access
  namespace: app-cjc
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: [ "get", "update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: app-cjc
  name: p2s-env-secrets-access-binding
subjects:
  - kind: ServiceAccount
    namespace: app-cjc
    name: p2s-env
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: p2s-env-secrets-access
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: p2s-env
  namespace: app-cjc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: p2s-env
  template:
    metadata:
      labels:
        app: p2s-env
      annotations:
        # https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-DAP/Latest/en/Content/Integrations/k8s-ocp/cjr-k8s-secrets-provider-ref.htm
        conjur.org/container-mode: sidecar
        conjur.org/secrets-destination: k8s_secrets
        conjur.org/jwt-token-path: /var/run/secrets/tokens/jwt
        conjur.org/secrets-refresh-interval: 10s
    spec:
      serviceAccountName: p2s-env
      containers:
      - name: cityapp
        image: docker.io/joetanx/cityapp:php
        imagePullPolicy: IfNotPresent
        env:
        - name: DBADDR
          valueFrom:
            secretKeyRef:
              name: p2s-env-secret
              key: address
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: p2s-env-secret
              key: username
        - name: DBPASS
          valueFrom:
            secretKeyRef:
              name: p2s-env-secret
              key: password
      - name: secretsprovider
        image: docker.io/cyberark/secrets-provider-for-k8s:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: podinfo
          mountPath: /conjur/podinfo
        - name: jwt-token
          mountPath: /var/run/secrets/tokens
        env:
        # https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-DAP/Latest/en/Content/Integrations/k8s-ocp/cjr-k8s-secrets-provider-ref.htm
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_SECRETS
          value: p2s-env-secret
        envFrom:
        - configMapRef:
            name: apps-cm
      volumes:
      - name: podinfo
        downwardAPI:
          items:
          - path: annotations
            fieldRef:
              fieldPath: metadata.annotations
      - name: jwt-token
        projected:
          sources:
          - serviceAccountToken:
              path: jwt
              expirationSeconds: 6000
              audience: https://apj-secrets.secretsmgr.cyberark.cloud/